# Author: ltan
# Date: 2020-05-31

MySQL支持几种基本的数据库引擎。并非所有的引擎都支持本书所描述的全文本搜索。两个最常使用的引擎为MyISAM和InnoDB，前者支持全文本搜索，而后者不支持。

全文搜索限制：
性能 —— 通配符和正则表达式匹配通常要求MySQL尝试匹配表中所有行（而且这些搜索极少使用表索引）。因此，由于被搜索行数不断增加，这些搜索可能非常耗时。

明确控制 —— 使用通配符和正则表达式匹配，很难（而且并不总是能）明确地控制匹配什么和不匹配什么。例如，指定一个词必须匹配，一个词必须不匹配，而一个词仅在第一个词确实匹配的情况下才可以匹配或者才可以不匹配。

智能化的结果 —— 虽然基于通配符和正则表达式的搜索提供了非常灵活的搜索，但它们都不能提供一种智能化的选择结果的方法。例如，一个特殊词的搜索将会返回包含该词的所有行，而不区分包含单个匹配的行和包含多个匹配的行（按照可能是更好的匹配来排列它们）。类似，一个特殊词的搜索将不会找出不包含该词但包含其他相关词的行。


1. 启用全文本搜索支持
一般在创建表时启用全文本搜索。CREATE TABLE语句，增加FULLTEXT（支持的列）子句

不要在导入数据时使用FULLTEXT 更新索引要花时间。如果正在导入数据到一个新表，此时不应该启用FULLTEXT索引。应该首先导入所有数据，然后再修改表，定义FULLTEXT。

使用两个函数Match()和Against()执行全文本搜索，其中Match()指定被搜索的列，Against()指定要使用的搜索表达式。

select note_text
from productnotes
where Match(note_text) Against('rabbit');


2. 布尔搜索
select note_text
from productnotes
where Match(note_text) Against('rabbit' IN BOOLEAN MODE);

为了匹配包含heavy但不包含任意以rope开始的词的行，可使用以下查询：
select note_text
from productnotes
where Match(note_text) Against('heavy -rope*' IN BOOLEAN MODE);

布尔操作符  说 明
+          包含，词必须存在
-          排除，词必须不出现
>          包含，而且增加等级值
<          包含，且减少等级值
()         把词组成子表达式（允许这些子表达式作为一个组被包含、排除、排列等）
~          取消一个词的排序值
*          词尾的通配符
""         定义一个短语（与单个词的列表不一样，它匹配整个短语以便包含或排除这个短语
